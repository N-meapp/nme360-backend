#!/usr/bin/env node

import app from '../app.js'; // ðŸ‘ˆ must match your app.js export
import http from 'http';
import debugLib from 'debug';
const debug = debugLib('nme360:server');

// Normalize port
function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) return val;
  if (port >= 0) return port;
  return false;
}

const port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

// Debug log to check the port
console.log(`Attempting to start server on port ${port}`);

// Create server
const server = http.createServer(app);

// Listen on provided port
server.listen(port, '0.0.0.0');
server.on('error', onError);
server.on('listening', onListening);

// Error handling
function onError(error) {
  if (error.syscall !== 'listen') throw error;

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
    default:
      throw error;
  }
}

// Listening log
function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug(`Listening on ${bind}`);
  console.log(`ðŸš€ Server running on ${bind}`);
}
